:PROPERTIES:
:ID:       33B0FF9E-3C76-4090-98EF-6A8270D8379D
:END:
#+title: interview

* interview

** language (C++)

*** const 修饰符有什么用？

1. 修饰变量为不可更改
2. 修饰类函数，常成员函数

*** decltype 和 auto 的区别？

1. auto类型说明符用编译器**计算变量的初始值**来推断其类型，而decltype虽然也让编译器分析表达式并得到它的类型，但是**不实际计算表达式的值**
2. 编译器推断出来的**auto类型有时候和初始值的类型并不完全一样**，编译器会适当地改变结果类型使其更符合初始化规则。例如，auto一般会忽略掉顶层const，而把底层const保留下来。与之相反，decltype会保留变量的顶层const。
3. 与auto不同，decltype的结果类型与**表达式形式密切相关**，如果变量名加上了一对括号，则得到的类型与不加括号时会有不同。如果decltype使用的是一个不加括号的变量，则得到的结果就是该变量的类型；如果给变量加上了一层或多层括号，则编译器将推断得到引用类型

*** static_cast，const_cast，reinterpret_cast 的区别？

1. statci_cast 只要不包含底层 const，明确定义的类型转换
2. const_cast 只能改变对象的底层 const，无法改变类型
3. reinterpret_cast 运算对象的位模式提供重新解释

*** 指针和引用的区别？

引用一般指左值引用

1. 引用不是一个对象，无法令引用重新绑定到另外一个对象，是起别名。必须初始化（无法定义引用的引用；引用必须绑定到对象上，无法绑定到右值上）
2. 指针本身是一个对象，允许对指针赋值和拷贝，可以在生命周期里指向多个对象。无须初始化。
3. 指针拷贝语意，可能放到多态的容器里
3. 引用必不为空，但是垂悬指针解应用会出现问题

*** RAII 的认识？

资源分配的手法，在构造函数中获取资源，在析构函数中释放。在多线程环境，异常环境中，保证资源被正确获取释放

*** new，placement new，operator new 的区别？

*** 内存布局

**int* 占用多少字节？**

1. int * 在 64 位机器中占 8 字节，32 位 4 字节
2. 64 位机器中有 2^64 内存地址空间，8 字节地址总线，8 字节指针可以覆盖全部地址空间

---

**int char 共存在一个 class 中，占用多少字节？**

64 位机器中 8 字节，因为数据总线是 8 字节，所以需要 8 字节内存对齐，char 会扩展到 4 字节

---

**gcc 编译器 __attribute__ ((packed)) 有什么用**

取消默认的内存对齐，紧凑排列类成员变量，所以包含 int char 的类此时在 64 位机器中为 5 字节


**C++ 多态是如何实现的？**

虚指针 vptr 和虚表 vtable，每个类如果定义了 virtual 修饰的函数，该对象就会生成一个虚指针指向类的虚表（虚表**编译时候确定，执行期无法修改**，不可修改，包含了重写函数调用地址），运行时查找虚表来确定调用函数地址

dynamic_cast 的使用？typeinfo 的实现？

C++ 多继承子类的内存分布？


## 可执行程序执行

**一个程序编译完之后从 shell 运行到调用 main 函数之前发生了什么？**

需要将该文件从磁盘加载到内存中，读入可执行文件的 section。经过 fork 创建子进程，分配虚存，地址重定位。调用 execve 读入命令行参数，通过动态库初始化全局变量，最后调用 main

*** RVO，NRVO 是干嘛的？

** algorithm

*** 如何判断一个链表是否有环？
